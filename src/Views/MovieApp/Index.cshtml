@model MvcMovie.Models.PaginatedList<MvcMovie.Models.Movie>

@{
    ViewData["Title"] = "Index";
}

<h2>Movie App</h2>
<a asp-action="Create">Create New</a>
<form asp-controller="Movies" asp-action="Index" method="get">
    <p>
        <select asp-for="MovieGenre" asp-items="Model.Genres">
            <option value="">All</option>
        </select>

        Title: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>
@if (Model !=null)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sortOrder=@ViewData["TitleSortParm"]>Title</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder=@ViewData["DateSortParm"]>ReleaseDate</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder=@ViewData["GenreSortParm"]>Genre</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder=@ViewData["PriceSortParm"]>@Html.DisplayNameFor(model => model.Movies[0].Price)</a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sortOrder=@ViewData["RatingSortParm"]>@Html.DisplayNameFor(model => model.Movies[0].Rating)</a>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReleaseDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Genre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rating)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber=@(Model.PageIndex - 1)
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber=@(Model.PageIndex + 1)
   class="btn btn-default @nextDisabled">
    Next
</a>
